import { AfterViewInit, ComponentFactoryResolver, ElementRef, OnChanges, OnInit, SimpleChanges, ViewContainerRef } from '@angular/core';
import { FcCallbacks, FcConnector, FcNode, FcNodeComponentConfig, FcNodeRectInfo, UserNodeCallbacks } from './ngx-flowchart.models';
import { FcModelService } from './model.service';
import * as ɵngcc0 from '@angular/core';
export declare class FcNodeContainerComponent implements OnInit, AfterViewInit, OnChanges {
    private nodeComponentConfig;
    private elementRef;
    private componentFactoryResolver;
    callbacks: FcCallbacks;
    userNodeCallbacks: UserNodeCallbacks;
    node: FcNode;
    selected: boolean;
    edit: boolean;
    underMouse: boolean;
    mouseOverConnector: FcConnector;
    modelservice: FcModelService;
    dragging: boolean;
    get nodeId(): string;
    get top(): string;
    get left(): string;
    nodeComponent: FcNodeComponent;
    nodeContentContainer: ViewContainerRef;
    constructor(nodeComponentConfig: FcNodeComponentConfig, elementRef: ElementRef<HTMLElement>, componentFactoryResolver: ComponentFactoryResolver);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    private updateNodeClass;
    private updateNodeComponent;
    private toggleClass;
    mousedown(event: MouseEvent): void;
    dragstart(event: Event | any): void;
    dragend(event: Event | any): void;
    click(event: MouseEvent): void;
    mouseover(event: MouseEvent): void;
    mouseout(event: MouseEvent): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FcNodeContainerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<FcNodeContainerComponent, "fc-node", never, { "userNodeCallbacks": "userNodeCallbacks"; "callbacks": "callbacks"; "node": "node"; "selected": "selected"; "edit": "edit"; "underMouse": "underMouse"; "mouseOverConnector": "mouseOverConnector"; "modelservice": "modelservice"; "dragging": "dragging"; }, {}, never, never>;
}
export declare abstract class FcNodeComponent implements OnInit {
    callbacks: FcCallbacks;
    userNodeCallbacks: UserNodeCallbacks;
    node: FcNode;
    selected: boolean;
    edit: boolean;
    underMouse: boolean;
    mouseOverConnector: FcConnector;
    modelservice: FcModelService;
    dragging: boolean;
    flowchartConstants: {
        htmlPrefix: string;
        leftConnectorType: string;
        rightConnectorType: string;
        curvedStyle: string;
        lineStyle: string;
        dragAnimationRepaint: string;
        dragAnimationShadow: string;
        canvasClass: string;
        selectedClass: string;
        editClass: string;
        activeClass: string;
        hoverClass: string;
        draggingClass: string;
        edgeClass: string;
        edgeLabelClass: string;
        connectorClass: string;
        magnetClass: string;
        nodeClass: string;
        nodeOverlayClass: string;
        leftConnectorClass: string;
        rightConnectorClass: string;
        canvasResizeThreshold: number;
        canvasResizeStep: number;
    };
    width: number;
    height: number;
    nodeRectInfo: FcNodeRectInfo;
    ngOnInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<FcNodeComponent, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<FcNodeComponent, never, never, { "callbacks": "callbacks"; "userNodeCallbacks": "userNodeCallbacks"; "node": "node"; "selected": "selected"; "edit": "edit"; "underMouse": "underMouse"; "mouseOverConnector": "mouseOverConnector"; "modelservice": "modelservice"; "dragging": "dragging"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZS5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsibm9kZS5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIENvbXBvbmVudEZhY3RvcnlSZXNvbHZlciwgRWxlbWVudFJlZiwgT25DaGFuZ2VzLCBPbkluaXQsIFNpbXBsZUNoYW5nZXMsIFZpZXdDb250YWluZXJSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZjQ2FsbGJhY2tzLCBGY0Nvbm5lY3RvciwgRmNOb2RlLCBGY05vZGVDb21wb25lbnRDb25maWcsIEZjTm9kZVJlY3RJbmZvLCBVc2VyTm9kZUNhbGxiYWNrcyB9IGZyb20gJy4vbmd4LWZsb3djaGFydC5tb2RlbHMnO1xuaW1wb3J0IHsgRmNNb2RlbFNlcnZpY2UgfSBmcm9tICcuL21vZGVsLnNlcnZpY2UnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRmNOb2RlQ29udGFpbmVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBBZnRlclZpZXdJbml0LCBPbkNoYW5nZXMge1xuICAgIHByaXZhdGUgbm9kZUNvbXBvbmVudENvbmZpZztcbiAgICBwcml2YXRlIGVsZW1lbnRSZWY7XG4gICAgcHJpdmF0ZSBjb21wb25lbnRGYWN0b3J5UmVzb2x2ZXI7XG4gICAgY2FsbGJhY2tzOiBGY0NhbGxiYWNrcztcbiAgICB1c2VyTm9kZUNhbGxiYWNrczogVXNlck5vZGVDYWxsYmFja3M7XG4gICAgbm9kZTogRmNOb2RlO1xuICAgIHNlbGVjdGVkOiBib29sZWFuO1xuICAgIGVkaXQ6IGJvb2xlYW47XG4gICAgdW5kZXJNb3VzZTogYm9vbGVhbjtcbiAgICBtb3VzZU92ZXJDb25uZWN0b3I6IEZjQ29ubmVjdG9yO1xuICAgIG1vZGVsc2VydmljZTogRmNNb2RlbFNlcnZpY2U7XG4gICAgZHJhZ2dpbmc6IGJvb2xlYW47XG4gICAgZ2V0IG5vZGVJZCgpOiBzdHJpbmc7XG4gICAgZ2V0IHRvcCgpOiBzdHJpbmc7XG4gICAgZ2V0IGxlZnQoKTogc3RyaW5nO1xuICAgIG5vZGVDb21wb25lbnQ6IEZjTm9kZUNvbXBvbmVudDtcbiAgICBub2RlQ29udGVudENvbnRhaW5lcjogVmlld0NvbnRhaW5lclJlZjtcbiAgICBjb25zdHJ1Y3Rvcihub2RlQ29tcG9uZW50Q29uZmlnOiBGY05vZGVDb21wb25lbnRDb25maWcsIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+LCBjb21wb25lbnRGYWN0b3J5UmVzb2x2ZXI6IENvbXBvbmVudEZhY3RvcnlSZXNvbHZlcik7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICBwcml2YXRlIHVwZGF0ZU5vZGVDbGFzcztcbiAgICBwcml2YXRlIHVwZGF0ZU5vZGVDb21wb25lbnQ7XG4gICAgcHJpdmF0ZSB0b2dnbGVDbGFzcztcbiAgICBtb3VzZWRvd24oZXZlbnQ6IE1vdXNlRXZlbnQpOiB2b2lkO1xuICAgIGRyYWdzdGFydChldmVudDogRXZlbnQgfCBhbnkpOiB2b2lkO1xuICAgIGRyYWdlbmQoZXZlbnQ6IEV2ZW50IHwgYW55KTogdm9pZDtcbiAgICBjbGljayhldmVudDogTW91c2VFdmVudCk6IHZvaWQ7XG4gICAgbW91c2VvdmVyKGV2ZW50OiBNb3VzZUV2ZW50KTogdm9pZDtcbiAgICBtb3VzZW91dChldmVudDogTW91c2VFdmVudCk6IHZvaWQ7XG59XG5leHBvcnQgZGVjbGFyZSBhYnN0cmFjdCBjbGFzcyBGY05vZGVDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICAgIGNhbGxiYWNrczogRmNDYWxsYmFja3M7XG4gICAgdXNlck5vZGVDYWxsYmFja3M6IFVzZXJOb2RlQ2FsbGJhY2tzO1xuICAgIG5vZGU6IEZjTm9kZTtcbiAgICBzZWxlY3RlZDogYm9vbGVhbjtcbiAgICBlZGl0OiBib29sZWFuO1xuICAgIHVuZGVyTW91c2U6IGJvb2xlYW47XG4gICAgbW91c2VPdmVyQ29ubmVjdG9yOiBGY0Nvbm5lY3RvcjtcbiAgICBtb2RlbHNlcnZpY2U6IEZjTW9kZWxTZXJ2aWNlO1xuICAgIGRyYWdnaW5nOiBib29sZWFuO1xuICAgIGZsb3djaGFydENvbnN0YW50czoge1xuICAgICAgICBodG1sUHJlZml4OiBzdHJpbmc7XG4gICAgICAgIGxlZnRDb25uZWN0b3JUeXBlOiBzdHJpbmc7XG4gICAgICAgIHJpZ2h0Q29ubmVjdG9yVHlwZTogc3RyaW5nO1xuICAgICAgICBjdXJ2ZWRTdHlsZTogc3RyaW5nO1xuICAgICAgICBsaW5lU3R5bGU6IHN0cmluZztcbiAgICAgICAgZHJhZ0FuaW1hdGlvblJlcGFpbnQ6IHN0cmluZztcbiAgICAgICAgZHJhZ0FuaW1hdGlvblNoYWRvdzogc3RyaW5nO1xuICAgICAgICBjYW52YXNDbGFzczogc3RyaW5nO1xuICAgICAgICBzZWxlY3RlZENsYXNzOiBzdHJpbmc7XG4gICAgICAgIGVkaXRDbGFzczogc3RyaW5nO1xuICAgICAgICBhY3RpdmVDbGFzczogc3RyaW5nO1xuICAgICAgICBob3ZlckNsYXNzOiBzdHJpbmc7XG4gICAgICAgIGRyYWdnaW5nQ2xhc3M6IHN0cmluZztcbiAgICAgICAgZWRnZUNsYXNzOiBzdHJpbmc7XG4gICAgICAgIGVkZ2VMYWJlbENsYXNzOiBzdHJpbmc7XG4gICAgICAgIGNvbm5lY3RvckNsYXNzOiBzdHJpbmc7XG4gICAgICAgIG1hZ25ldENsYXNzOiBzdHJpbmc7XG4gICAgICAgIG5vZGVDbGFzczogc3RyaW5nO1xuICAgICAgICBub2RlT3ZlcmxheUNsYXNzOiBzdHJpbmc7XG4gICAgICAgIGxlZnRDb25uZWN0b3JDbGFzczogc3RyaW5nO1xuICAgICAgICByaWdodENvbm5lY3RvckNsYXNzOiBzdHJpbmc7XG4gICAgICAgIGNhbnZhc1Jlc2l6ZVRocmVzaG9sZDogbnVtYmVyO1xuICAgICAgICBjYW52YXNSZXNpemVTdGVwOiBudW1iZXI7XG4gICAgfTtcbiAgICB3aWR0aDogbnVtYmVyO1xuICAgIGhlaWdodDogbnVtYmVyO1xuICAgIG5vZGVSZWN0SW5mbzogRmNOb2RlUmVjdEluZm87XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbn1cbiJdfQ==